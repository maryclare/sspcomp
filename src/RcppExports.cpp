// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// objVec
double objVec(arma::colvec beta, arma::colvec Xbeta, arma::colvec y, arma::colvec OmegaInv);
RcppExport SEXP _sspcomp_objVec(SEXP betaSEXP, SEXP XbetaSEXP, SEXP ySEXP, SEXP OmegaInvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Xbeta(XbetaSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type OmegaInv(OmegaInvSEXP);
    rcpp_result_gen = Rcpp::wrap(objVec(beta, Xbeta, y, OmegaInv));
    return rcpp_result_gen;
END_RCPP
}
// objMat
double objMat(arma::colvec beta, arma::colvec Xbeta, arma::colvec y, arma::mat OmegaInv);
RcppExport SEXP _sspcomp_objMat(SEXP betaSEXP, SEXP XbetaSEXP, SEXP ySEXP, SEXP OmegaInvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Xbeta(XbetaSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type OmegaInv(OmegaInvSEXP);
    rcpp_result_gen = Rcpp::wrap(objMat(beta, Xbeta, y, OmegaInv));
    return rcpp_result_gen;
END_RCPP
}
// gradVec
double gradVec(arma::mat X, arma::colvec y, arma::colvec OmegaInv, arma::colvec beta, arma::colvec Xbeta, int j);
RcppExport SEXP _sspcomp_gradVec(SEXP XSEXP, SEXP ySEXP, SEXP OmegaInvSEXP, SEXP betaSEXP, SEXP XbetaSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type OmegaInv(OmegaInvSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Xbeta(XbetaSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(gradVec(X, y, OmegaInv, beta, Xbeta, j));
    return rcpp_result_gen;
END_RCPP
}
// gradMat
double gradMat(arma::mat X, arma::colvec y, arma::mat OmegaInv, arma::colvec beta, arma::colvec Xbeta, int j);
RcppExport SEXP _sspcomp_gradMat(SEXP XSEXP, SEXP ySEXP, SEXP OmegaInvSEXP, SEXP betaSEXP, SEXP XbetaSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type OmegaInv(OmegaInvSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Xbeta(XbetaSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(gradMat(X, y, OmegaInv, beta, Xbeta, j));
    return rcpp_result_gen;
END_RCPP
}
// hessVec
double hessVec(arma::mat X, arma::colvec OmegaInv, arma::colvec Xbeta, int j);
RcppExport SEXP _sspcomp_hessVec(SEXP XSEXP, SEXP OmegaInvSEXP, SEXP XbetaSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type OmegaInv(OmegaInvSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Xbeta(XbetaSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(hessVec(X, OmegaInv, Xbeta, j));
    return rcpp_result_gen;
END_RCPP
}
// hessMat
double hessMat(arma::mat X, arma::mat OmegaInv, arma::colvec Xbeta, int j);
RcppExport SEXP _sspcomp_hessMat(SEXP XSEXP, SEXP OmegaInvSEXP, SEXP XbetaSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type OmegaInv(OmegaInvSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Xbeta(XbetaSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(hessMat(X, OmegaInv, Xbeta, j));
    return rcpp_result_gen;
END_RCPP
}
// solveLogitVec
double solveLogitVec(arma::colvec y, arma::colvec beta, arma::mat X, arma::colvec OmegaInv, arma::colvec Xbeta, int j, double epsInner);
RcppExport SEXP _sspcomp_solveLogitVec(SEXP ySEXP, SEXP betaSEXP, SEXP XSEXP, SEXP OmegaInvSEXP, SEXP XbetaSEXP, SEXP jSEXP, SEXP epsInnerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type OmegaInv(OmegaInvSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Xbeta(XbetaSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< double >::type epsInner(epsInnerSEXP);
    rcpp_result_gen = Rcpp::wrap(solveLogitVec(y, beta, X, OmegaInv, Xbeta, j, epsInner));
    return rcpp_result_gen;
END_RCPP
}
// solveLogitMat
double solveLogitMat(arma::colvec y, arma::colvec beta, arma::mat X, arma::mat OmegaInv, arma::colvec Xbeta, int j, double epsInner);
RcppExport SEXP _sspcomp_solveLogitMat(SEXP ySEXP, SEXP betaSEXP, SEXP XSEXP, SEXP OmegaInvSEXP, SEXP XbetaSEXP, SEXP jSEXP, SEXP epsInnerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type OmegaInv(OmegaInvSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Xbeta(XbetaSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< double >::type epsInner(epsInnerSEXP);
    rcpp_result_gen = Rcpp::wrap(solveLogitMat(y, beta, X, OmegaInv, Xbeta, j, epsInner));
    return rcpp_result_gen;
END_RCPP
}
// coordDescLogitVec
arma::colvec coordDescLogitVec(arma::colvec y, arma::mat X, arma::colvec OmegaInv, int maxit, arma::colvec betaStart, double eps, double epsInner);
RcppExport SEXP _sspcomp_coordDescLogitVec(SEXP ySEXP, SEXP XSEXP, SEXP OmegaInvSEXP, SEXP maxitSEXP, SEXP betaStartSEXP, SEXP epsSEXP, SEXP epsInnerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type OmegaInv(OmegaInvSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type betaStart(betaStartSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type epsInner(epsInnerSEXP);
    rcpp_result_gen = Rcpp::wrap(coordDescLogitVec(y, X, OmegaInv, maxit, betaStart, eps, epsInner));
    return rcpp_result_gen;
END_RCPP
}
// coordDescLogitMat
arma::colvec coordDescLogitMat(arma::colvec y, arma::mat X, arma::mat OmegaInv, int maxit, arma::colvec betaStart, double eps, double epsInner);
RcppExport SEXP _sspcomp_coordDescLogitMat(SEXP ySEXP, SEXP XSEXP, SEXP OmegaInvSEXP, SEXP maxitSEXP, SEXP betaStartSEXP, SEXP epsSEXP, SEXP epsInnerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type OmegaInv(OmegaInvSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type betaStart(betaStartSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type epsInner(epsInnerSEXP);
    rcpp_result_gen = Rcpp::wrap(coordDescLogitMat(y, X, OmegaInv, maxit, betaStart, eps, epsInner));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sspcomp_objVec", (DL_FUNC) &_sspcomp_objVec, 4},
    {"_sspcomp_objMat", (DL_FUNC) &_sspcomp_objMat, 4},
    {"_sspcomp_gradVec", (DL_FUNC) &_sspcomp_gradVec, 6},
    {"_sspcomp_gradMat", (DL_FUNC) &_sspcomp_gradMat, 6},
    {"_sspcomp_hessVec", (DL_FUNC) &_sspcomp_hessVec, 4},
    {"_sspcomp_hessMat", (DL_FUNC) &_sspcomp_hessMat, 4},
    {"_sspcomp_solveLogitVec", (DL_FUNC) &_sspcomp_solveLogitVec, 7},
    {"_sspcomp_solveLogitMat", (DL_FUNC) &_sspcomp_solveLogitMat, 7},
    {"_sspcomp_coordDescLogitVec", (DL_FUNC) &_sspcomp_coordDescLogitVec, 7},
    {"_sspcomp_coordDescLogitMat", (DL_FUNC) &_sspcomp_coordDescLogitMat, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_sspcomp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
